<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="3" name="pytest" skips="0" tests="28" time="1477.026"><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="30" name="test_000_Start_FTP_services_all_members" time="122.920557976"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="48" name="test_001_Verify_the_FTP_service_is_running_all_members" time="0.0166711807251"><failure message="AssertionError">self = &lt;FTP_TFTP_HTTP.NIOS_FTP testMethod=test_001_Verify_the_FTP_service_is_running_all_members&gt;

    @pytest.mark.run(order=2)
    def test_001_Verify_the_FTP_service_is_running_all_members(self):
        FTP.Verify_the_FTP_service_is_running(config.grid_vip)
&gt;       FTP.Verify_the_FTP_service_is_running(config.grid_member1_vip)

FTP_TFTP_HTTP.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

IP = &apos;10.34.154.100&apos;

    def Verify_the_FTP_service_is_running(IP):
        print(&quot;\n Verify the FTP service is running on &quot;+IP+&quot;\n&quot;)
        LookFor=&quot;.*Sending state change trap for.*- ftp .*FTP Service is working.* from 28 to 26.*&quot;
        print(LookFor)
        logs=logv(LookFor,&quot;/infoblox/var/infoblox.log&quot;,IP)
        print(logs)
        print(&apos;-------------------------&apos;)
        if logs:
            print(&quot;Success: Verified the FTP service is running&quot;)
            assert True
    
        else:
            print(&quot;Failure: Verified the FTP service is not running&quot;)
&gt;           assert False
E           AssertionError

FTP_suit.py:88: AssertionError</failure></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="54" name="test_002_Check_the_status_of_FTP_service_are_running" time="0.228954076767"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="66" name="test_003_Validate_the_log_index_forbidden_by_Options_on_master" time="0.00772404670715"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="70" name="test_004_Validate_the_log_index_forbidden_by_Options_on_HA_member" time="0.00547909736633"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="74" name="test_005_Validate_the_log_index_forbidden_by_Options_on_SA_member" time="0.00537800788879"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="78" name="test_006_grep_vsftpd_and_validate_PID_on_master" time="4.13795995712"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="83" name="test_007_grep_vsftpd_and_validate_PID_on_HA_member" time="4.13918876648"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="88" name="test_008_grep_vsftpd_and_validate_PID_on_SA_member" time="4.10507178307"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="93" name="test_009_Upload_files_through_master" time="1.03676128387"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="97" name="test_010_validate_audit_log_able_to_upload_file" time="0.00719499588013"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="113" name="test_011_stop_FTP_service" time="62.9418370724"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="121" name="test_012_Verify_the_FTP_service_is_stopped_all_members" time="0.0158412456512"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="127" name="test_013_Check_the_status_of_FTP_service_is_inactive" time="0.27536034584"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="138" name="test_014_Restarted_FTP_services_all_members" time="127.920414925"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="155" name="test_015_Verify_the_FTP_service_is_running_all_members_after_restarted" time="0.0267820358276"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="161" name="test_016_Check_the_status_of_FTP_service_are_running_after_restarted" time="0.221260309219"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="172" name="test_017_Start_and_stop_FTP_services_three_times" time="614.458208799"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="188" name="test_018_Verify_the_FTP_service_is_running_all_members_after_stop_starting_3_times" time="0.0423102378845"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="195" name="test_019_Check_the_status_of_FTP_service_are_running_after_restarted" time="0.24170088768"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="206" name="test_020_Set_FTP_ACLs" time="60.5289320946"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="212" name="test_021_validate_FTP_ACLs_added" time="0.122182846069"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="218" name="test_022_Upload_files_after_configure_ACLs" time="1.10901689529"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="222" name="test_023_validate_able_to_upload_file_after_configure_ACLs" time="0.0144350528717"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="237" name="test_024_Stop_and_start_FTP_services_and_validate_the_status" time="196.140205145"><failure message="AssertionError">self = &lt;FTP_TFTP_HTTP.NIOS_FTP testMethod=test_024_Stop_and_start_FTP_services_and_validate_the_status&gt;

    @pytest.mark.run(order=25)
    def test_024_Stop_and_start_FTP_services_and_validate_the_status(self):
    
        FTP.stop_FTP_services(0,config.grid_vip,&quot;Master&quot;)
        FTP.stop_FTP_services(1,config.grid_member1_vip,&quot;HA member&quot;)
        FTP.stop_FTP_services(2,config.grid_member3_vip,&quot;SA member&quot;)
        sleep(10)
    
        FTP.start_FTP_services(0,config.grid_vip,&quot;Master&quot;)
        FTP.start_FTP_services(1,config.grid_member1_vip,&quot;HA member&quot;)
        FTP.start_FTP_services(2,config.grid_member3_vip,&quot;SA member&quot;)
    
        FTP.Verify_the_FTP_service_is_running(config.grid_vip)
&gt;       FTP.Verify_the_FTP_service_is_running(config.grid_member1_vip)

FTP_TFTP_HTTP.py:251: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

IP = &apos;10.34.154.100&apos;

    def Verify_the_FTP_service_is_running(IP):
        print(&quot;\n Verify the FTP service is running on &quot;+IP+&quot;\n&quot;)
        LookFor=&quot;.*Sending state change trap for.*- ftp .*FTP Service is working.* from 28 to 26.*&quot;
        print(LookFor)
        logs=logv(LookFor,&quot;/infoblox/var/infoblox.log&quot;,IP)
        print(logs)
        print(&apos;-------------------------&apos;)
        if logs:
            print(&quot;Success: Verified the FTP service is running&quot;)
            assert True
    
        else:
            print(&quot;Failure: Verified the FTP service is not running&quot;)
&gt;           assert False
E           AssertionError

FTP_suit.py:88: AssertionError</failure></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="257" name="test_025_Stop_FTP_services_and_try_to_upload_the_file" time="73.2487039566"></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="273" name="test_026_Start_FTP_services_then_restart_member_validate_no_error_in_log" time="142.328053951"><failure message="AssertionError">self = &lt;FTP_TFTP_HTTP.NIOS_FTP testMethod=test_026_Start_FTP_services_then_restart_member_validate_no_error_in_log&gt;

    @pytest.mark.run(order=27)
    def test_026_Start_FTP_services_then_restart_member_validate_no_error_in_log(self):
    
        print(&quot;======================================&quot;)
        print(&quot;Start FTP services on HA member \n\n&quot;)
        print(&quot;======================================&quot;)
        FTP.start_FTP_services(1,config.grid_member1_vip,&quot;HA member&quot;)
    
        print(&quot;======================================&quot;)
        print(&quot;Start FTP services on SA member \n\n&quot;)
        print(&quot;======================================&quot;)
        FTP.start_FTP_services(2,config.grid_member3_vip,&quot;SA member&quot;)
    
        FTP.restart_services(1)
        FTP.restart_services(2)
    
&gt;       FTP.Verify_the_FTP_service_is_running(config.grid_member1_vip)

FTP_TFTP_HTTP.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

IP = &apos;10.34.154.100&apos;

    def Verify_the_FTP_service_is_running(IP):
        print(&quot;\n Verify the FTP service is running on &quot;+IP+&quot;\n&quot;)
        LookFor=&quot;.*Sending state change trap for.*- ftp .*FTP Service is working.* from 28 to 26.*&quot;
        print(LookFor)
        logs=logv(LookFor,&quot;/infoblox/var/infoblox.log&quot;,IP)
        print(logs)
        print(&apos;-------------------------&apos;)
        if logs:
            print(&quot;Success: Verified the FTP service is running&quot;)
            assert True
    
        else:
            print(&quot;Failure: Verified the FTP service is not running&quot;)
&gt;           assert False
E           AssertionError

FTP_suit.py:88: AssertionError</failure></testcase><testcase classname="FTP_TFTP_HTTP.NIOS_FTP" file="FTP_TFTP_HTTP.py" line="292" name="test_027_cleanup" time="60.5492730141"></testcase></testsuite>